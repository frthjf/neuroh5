CXX=CC
CC=cc

AR		:= ar
LD        	:= cc

HDF5_LIBDIR=/opt/cray/hdf5-parallel/1.8.16/intel/15.0/lib
HDF5_INCDIR=/opt/cray/hdf5-parallel/1.8.16/intel/15.0/include/
HDF5_LIB        = hdf5

PARMETIS_INCDIR := $(HOME)/bin/parmetis/include
PARMETIS_LIBDIR := $(HOME)/bin/parmetis/lib

CFLAGS		= -Wall -I$(HDF5_INCDIR) -I$(PARMETIS_INCDIR) -I../include
LDFLAGS		= -L$(HDF5_LIBDIR)

MODULES   	:= driver graph io io/hdf5 model
INC_DIR   	:= $(addprefix include/,$(MODULES))
SRC_DIR   	:= $(addprefix src/,$(MODULES))
BUILD_DIR	:= $(addprefix build/,$(MODULES))

SRC      	:= $(foreach sdir,$(SRC_DIR),$(wildcard $(sdir)/*.cc))
OBJ       	:= $(patsubst src/%.cc,build/%.o,$(SRC))
INCLUDES  	:= $(addprefix -I,$(INC_DIR) include $(HDF5_INCDIR) $(PARMETIS_INCDIR))

vpath %.cc $(SRC_DIR)

define make-goal
$1/%.o: %.cc
	$(CC) -std=c++11 -Wall $(INCLUDES) -O2 -c $$< -o $$@
endef

.PHONY: all checkdirs clean

all: checkdirs build/reader build/scatter build/parts

build/parts: build/libngh5.graph.a build/libngh5.io.a build/libngh5.io.hdf5.a
	$(LD) -o $@ $^ -L$(HDF5_LIBDIR) -l$(HDF5_LIB) -L$(PARMETIS_LIBDIR) -lparmetis

build/reader: build/libngh5.graph.a build/libngh5.io.a build/libngh5.io.hdf5.a
	$(LD) -o $@ $^ -L$(HDF5_LIBDIR) -l$(HDF5_LIB) -L$(PARMETIS_LIBDIR) -lparmetis

build/scatter: build/libngh5.graph.a build/libngh5.io.a build/libngh5.io.hdf5.a
	$(LD) -o $@ $^ -L$(HDF5_LIBDIR) -l$(HDF5_LIB) -L$(PARMETIS_LIBDIR) -lparmetis

build/libngh5.io.a: $(OBJ)
	$(AR) cr $@ $^

build/libngh5.io.hdf5.a: $(OBJ)
	$(AR) cr $@ $^

build/libngh5.graph.a: $(OBJ)
	$(AR) cr $@ $^

checkdirs: $(BUILD_DIR)

$(BUILD_DIR):
	@mkdir -p $@

clean:
	@rm -rf $(BUILD_DIR)

$(foreach bdir,$(BUILD_DIR),$(eval $(call make-goal,$(bdir))))
