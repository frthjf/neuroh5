# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ v0.0.4 ]
  pull_request:
    branches: [ v0.0.4 ]

jobs:
  build-macos:
    runs-on: macOS-latest

    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          brew install cmake open-mpi iltommi/brews/hdf5-parallel
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade numpy mpi4py h5py
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build
        run: |
          export PATH="/usr/local/opt/hdf5-parallel/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/hdf5-parallel/lib"
          export CPPFLAGS="-I/usr/local/opt/hdf5-parallel/include"
          python -m pip install -v .
      - name: Test import
        run: |
          python ./tests/test_import.py

 
  build-linux:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt update -y && sudo apt upgrade 
        sudo apt install build-essential cmake mpich libhdf5-mpich-dev 
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade numpy mpi4py h5py
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build
      run: |
        python -m pip install -v .
    - name: Test import
      run: |
        python ./tests/test_import.py
